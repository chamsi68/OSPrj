#----------------------------------------------------------#
#                                                          #
#	 VGa functions. change video mode etc.                 #
#                                                          #
#----------------------------------------------------------#
	.data

	#-------------------#
	#   VGa palettes	#
	#-------------------#

palette256:
	.byte	   0,    0,    0, 0x20,    0,    0,    0, 0x20,    0, 0x20, 0x20,    0,    0
	.byte	   0, 0x20, 0x20,    0, 0x20,    0, 0x20, 0x20, 0x30, 0x30, 0x30, 0x30, 0x37
	.byte	0x30, 0x29, 0x32, 0x3c, 0x10,  0x8,    0, 0x18,  0x8,    0, 0x20,  0x8,    0
	.byte	0x28,  0x8,    0, 0x30,  0x8,    0, 0x38,  0x8,    0,    0, 0x10,    0,  0x8
	.byte	0x10,    0, 0x10, 0x10,    0, 0x18, 0x10,    0, 0x20, 0x10,    0, 0x28, 0x10
	.byte	   0, 0x30, 0x10,    0, 0x38, 0x10,    0,    0, 0x18,    0,  0x8, 0x18,    0
	.byte	0x10, 0x18,    0, 0x18, 0x18,    0, 0x20, 0x18,    0, 0x28, 0x18,    0, 0x30
	.byte	0x18,    0, 0x38, 0x18,    0,    0, 0x20,    0,  0x8, 0x20,    0, 0x10, 0x20
	.byte	   0, 0x18, 0x20,    0, 0x20, 0x20,    0, 0x28, 0x20,    0, 0x30, 0x20,    0
	.byte	0x38, 0x20,    0,    0, 0x28,    0,  0x8, 0x28,    0, 0x10, 0x28,    0, 0x18
	.byte	0x28,    0, 0x20, 0x28,    0, 0x28, 0x28,    0, 0x30, 0x28,    0, 0x38, 0x28
	.byte	   0,    0, 0x30,    0,  0x8, 0x30,    0, 0x10, 0x30,    0, 0x18, 0x30,    0
	.byte	0x20, 0x30,    0, 0x28, 0x30,    0, 0x30, 0x30,    0, 0x38, 0x30,    0,    0
	.byte	0x38,    0,  0x8, 0x38,    0, 0x10, 0x38,    0, 0x18, 0x38,    0, 0x20, 0x38
	.byte	   0, 0x28, 0x38,    0, 0x30, 0x38,    0, 0x38, 0x38,    0,    0,    0, 0x10
	.byte	 0x8,    0, 0x10, 0x10,    0, 0x10, 0x18,    0, 0x10, 0x20,    0, 0x10, 0x28
	.byte	   0, 0x10, 0x30,    0, 0x10, 0x38,    0, 0x10,    0,  0x8, 0x10,  0x8,  0x8
	.byte	0x10, 0x10,  0x8, 0x10, 0x18,  0x8, 0x10, 0x20,  0x8, 0x10, 0x28,  0x8, 0x10
	.byte	0x30,  0x8, 0x10, 0x38,  0x8, 0x10,    0, 0x10, 0x10,  0x8, 0x10, 0x10, 0x10
	.byte	0x10, 0x10, 0x18, 0x10, 0x10, 0x20, 0x10, 0x10, 0x28, 0x10, 0x10, 0x30, 0x10
	.byte	0x10, 0x38, 0x10, 0x10,    0, 0x18, 0x10,  0x8, 0x18, 0x10, 0x10, 0x18, 0x10
	.byte	0x18, 0x18, 0x10, 0x20, 0x18, 0x10, 0x28, 0x18, 0x10, 0x30, 0x18, 0x10, 0x38
	.byte	0x18, 0x10,    0, 0x20, 0x10,  0x8, 0x20, 0x10, 0x10, 0x20, 0x10, 0x18, 0x20
	.byte	0x10, 0x20, 0x20, 0x10, 0x28, 0x20, 0x10, 0x30, 0x20, 0x10, 0x38, 0x20, 0x10
	.byte	   0, 0x28, 0x10,  0x8, 0x28, 0x10, 0x10, 0x28, 0x10, 0x18, 0x28, 0x10, 0x20
	.byte	0x28, 0x10, 0x28, 0x28, 0x10, 0x30, 0x28, 0x10, 0x38, 0x28, 0x10,    0, 0x30
	.byte	0x10,  0x8, 0x30, 0x10, 0x10, 0x30, 0x10, 0x18, 0x30, 0x10, 0x20, 0x30, 0x10
	.byte	0x28, 0x30, 0x10, 0x30, 0x30, 0x10, 0x38, 0x30, 0x10,    0, 0x38, 0x10,  0x8
	.byte	0x38, 0x10, 0x10, 0x38, 0x10, 0x18, 0x38, 0x10, 0x20, 0x38, 0x10, 0x28, 0x38
	.byte	0x10, 0x30, 0x38, 0x10, 0x38, 0x38, 0x10,    0,    0, 0x20,  0x8,    0, 0x20
	.byte	0x10,    0, 0x20, 0x18,    0, 0x20, 0x20,    0, 0x20, 0x28,    0, 0x20, 0x30
	.byte	   0, 0x20, 0x38,    0, 0x20,    0,  0x8, 0x20,  0x8,  0x8, 0x20, 0x10,  0x8
	.byte	0x20, 0x18,  0x8, 0x20, 0x20,  0x8, 0x20, 0x28,  0x8, 0x20, 0x30,  0x8, 0x20
	.byte	0x38,  0x8, 0x20,    0, 0x10, 0x20,  0x8, 0x10, 0x20, 0x10, 0x10, 0x20, 0x18
	.byte	0x10, 0x20, 0x20, 0x10, 0x20, 0x28, 0x10, 0x20, 0x30, 0x10, 0x20, 0x38, 0x10
	.byte	0x20,    0, 0x18, 0x20,  0x8, 0x18, 0x20, 0x10, 0x18, 0x20, 0x18, 0x18, 0x20
	.byte	0x20, 0x18, 0x20, 0x28, 0x18, 0x20, 0x30, 0x18, 0x20, 0x38, 0x18, 0x20,    0
	.byte	0x20, 0x20,  0x8, 0x20, 0x20, 0x10, 0x20, 0x20, 0x18, 0x20, 0x20, 0x20, 0x20
	.byte	0x20, 0x28, 0x20, 0x20, 0x30, 0x20, 0x20, 0x38, 0x20, 0x20,    0, 0x28, 0x20
	.byte	 0x8, 0x28, 0x20, 0x10, 0x28, 0x20, 0x18, 0x28, 0x20, 0x20, 0x28, 0x20, 0x28
	.byte	0x28, 0x20, 0x30, 0x28, 0x20, 0x38, 0x28, 0x20,    0, 0x30, 0x20,  0x8, 0x30
	.byte	0x20, 0x10, 0x30, 0x20, 0x18, 0x30, 0x20, 0x20, 0x30, 0x20, 0x28, 0x30, 0x20
	.byte	0x30, 0x30, 0x20, 0x38, 0x30, 0x20,    0, 0x38, 0x20,  0x8, 0x38, 0x20, 0x10
	.byte	0x38, 0x20, 0x18, 0x38, 0x20, 0x20, 0x38, 0x20, 0x28, 0x38, 0x20, 0x30, 0x38
	.byte	0x20, 0x38, 0x38, 0x20,    0,    0, 0x30,  0x8,    0, 0x30, 0x10,    0, 0x30
	.byte	0x18,    0, 0x30, 0x20,    0, 0x30, 0x28,    0, 0x30, 0x30,    0, 0x30, 0x38
	.byte	   0, 0x30,    0,  0x8, 0x30,  0x8,  0x8, 0x30, 0x10,  0x8, 0x30, 0x18,  0x8
	.byte	0x30, 0x20,  0x8, 0x30, 0x28,  0x8, 0x30, 0x30,  0x8, 0x30, 0x38,  0x8, 0x30
	.byte	   0, 0x10, 0x30,  0x8, 0x10, 0x30, 0x10, 0x10, 0x30, 0x18, 0x10, 0x30, 0x20
	.byte	0x10, 0x30, 0x28, 0x10, 0x30, 0x30, 0x10, 0x30, 0x38, 0x10, 0x30,    0, 0x18
	.byte	0x30,  0x8, 0x18, 0x30, 0x10, 0x18, 0x30, 0x18, 0x18, 0x30, 0x20, 0x18, 0x30
	.byte	0x28, 0x18, 0x30, 0x30, 0x18, 0x30, 0x38, 0x18, 0x30,    0, 0x20, 0x30,  0x8
	.byte	0x20, 0x30, 0x10, 0x20, 0x30, 0x18, 0x20, 0x30, 0x20, 0x20, 0x30, 0x28, 0x20
	.byte	0x30, 0x30, 0x20, 0x30, 0x38, 0x20, 0x30,    0, 0x28, 0x30,  0x8, 0x28, 0x30
	.byte	0x10, 0x28, 0x30, 0x18, 0x28, 0x30, 0x20, 0x28, 0x30, 0x28, 0x28, 0x30, 0x30
	.byte	0x28, 0x30, 0x38, 0x28, 0x30,    0, 0x30, 0x30,  0x8, 0x30, 0x30, 0x10, 0x30
	.byte	0x30, 0x18, 0x30, 0x30, 0x20, 0x30, 0x30, 0x28, 0x30, 0x30, 0x3f, 0x3e, 0x3c
	.byte	0x28, 0x28, 0x29, 0x20, 0x20, 0x20, 0x3f,    0,    0,    0, 0x3f,    0, 0x3f
	.byte	0x3f,    0,    0,    0, 0x3f, 0x3f,    0, 0x3f,    0, 0x3f, 0x3f, 0x3f, 0x3f
	.byte	0x3f

	#---------------------#
	#  VGa mode values.   #
	#---------------------#

mode0x13:
	.byte	0x63,    0,  0x3,  0x1,  0xf,    0,  0xe, 0x5f, 0x4f, 0x50, 0x82, 0x54, 0x80
	.byte	0xbf, 0x1f,    0, 0x41,    0,    0,    0,    0,    0,    0, 0x9c,  0xe, 0x8f
	.byte	0x28, 0x40, 0x96, 0xb9, 0xa3, 0xff,    0,    0,    0,    0,    0, 0x40,  0x5
	.byte	 0xf, 0xff,    0,  0x1,  0x2,  0x3,  0x4,  0x5,  0x6,  0x7,  0x8,  0x9,  0xa
	.byte	 0xb,  0xc,  0xd,  0xe,  0xf, 0x41,    0,  0xf,    0,    0

	.text
	.globl	set_mode_0x13

#---------------------------------#
#  sets the screen to mode 0x13   #
#---------------------------------#

set_mode_0x13:
	pushl	%ebp
	movl	%esp, %ebp

	movl	$mode0x13, %esi
	call	set_regs

	pushl	$palette256
	call	set_palette256
	addl	$4, %esp

	movl	$0x13, VGAMode
	movl	$0, MinX
	movl	$0, MinY
	movl	$39, MaxX
	movl	$12, MaxY

	leave
	ret

#---------------------------------------------#
#  sets the palette (256 colors)              #
#                                             #
# input:  1st argument = 8(ebp) = palette.    #
# output: none.                               #
#---------------------------------------------#

set_palette256:
	pushl	%ebp
	movl	%esp, %ebp

	xorw	%cx, %cx
0:
	movw	$0x3c8, %dx
	movw	%cx, %ax
	outb	%al, %dx
	incw	%dx							# port 0x3c9
	movl	8(%ebp), %eax
	movb	(%eax), %al					# red
	outb	%al, %dx
	incl	8(%ebp)
	movl	8(%ebp), %eax
	movb	(%eax), %al					# green
	outb	%al, %dx
	incl	8(%ebp)
	movl	8(%ebp), %eax
	movb	(%eax), %al					# blue
	outb	%al, %dx
	incl	8(%ebp)

	incw	%cx
	cmpw	$0xff, %cx
	jle		0b

	leave
	ret
